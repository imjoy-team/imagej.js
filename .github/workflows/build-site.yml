# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Site

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # Configure git to use HTTPS instead of SSH for GitHub repositories
    - name: Configure git
      run: |
        git config --global url."https://github.com/".insteadOf git@github.com:
        git config --global url."https://github.com/".insteadOf git://github.com/
        git config --global url."https://".insteadOf git://
    - name: Install dependencies
      run: |
        npm config set legacy-peer-deps true
        npm ci --no-audit --no-fund
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: npm run build
    - name: Get compiled imagej.js
      run: bash get-imagej.sh
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
    - name: Upload artifact for deployment to Aliyun
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: ./dist
  
  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-aliyun:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./dist
      - name: Setup aliyun oss
        uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: "oss-cn-hongkong.aliyuncs.com"
          access-key-id: ${{ secrets.OSS_ACCESSKEYID }}
          access-key-secret: ${{ secrets.OSS_ACCESSKEYSECRET }}
      - name: Deploy to aliyun
        run: ossutil cp -rf ./dist oss://imagej/

